name: Release

env:
  FIREBASE_API_KEY: AIzaSyAXYgJha6lO_L4qfWpnhf3KijeKYDhuFzQ
  FIREBASE_PROJECT_ID: next-firebase-auth-edge-demo
  FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
  FIREBASE_ADMIN_PRIVATE_KEY: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}
  FIREBASE_AUTH_TENANT_ID: ${{ secrets.FIREBASE_AUTH_TENANT_ID }}
  FIREBASE_APP_CHECK_KEY: ${{ secrets.FIREBASE_APP_CHECK_KEY }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, canary]
    paths:
      - "**"
      - "!*.md"
      - "!**/*.md"
      - "!.gitignore"

jobs:
  install:
    name: Install dependencies
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          cache-dependency-path: yarn.lock
          node-version: 20
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('./yarn.lock') }}-${{github.sha}}
          restore-keys: |
            ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('./yarn.lock') }}-
      - run: yarn install

  build:
    name: Build packages
    timeout-minutes: 15
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('./yarn.lock') }}-${{github.sha}}
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            lib
          key: ${{ runner.os }}-build-cache-v2-${{ github.ref_name }}-${{github.sha}}
          restore-keys: |
            ${{ runner.os }}-build-cache-v2-${{ github.ref_name }}-
      - run: yarn build

  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('./yarn.lock') }}-${{github.sha}}
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            lib
          key: ${{ runner.os }}-build-cache-v2-${{ github.ref_name }}-${{github.sha}}
          restore-keys: |
            ${{ runner.os }}-build-cache-v2-${{ github.ref_name }}-

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic # Need an `id` for output variables
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}


